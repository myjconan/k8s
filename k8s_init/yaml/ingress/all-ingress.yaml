# jenkins
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: jenkins-ingress
  namespace: jenkins
spec:
  ingressClassName: nginx
  rules:
    - host: myjenkins.com
      http:
        paths:
          - backend:
              service:
                name: jenkins
                port:
                  number: 8080
            path: /
            pathType: Prefix
---
# kuboard
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.org/proxy-pass-headers: "Upgrade,Connection,Authorization"
    nginx.org/websocket-services: kuboard-v3
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  name: kuboard-ingress
  namespace: kuboard
spec:
  ingressClassName: nginx
  rules:
    - host: myk8s.com
      http:
        paths:
          - backend:
              service:
                name: kuboard-v3
                port:
                  number: 80
            path: /
            pathType: Prefix
---
# prometheus
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  name: prometheus-ingress
  namespace: monitoring
spec:
  ingressClassName: nginx
  rules:
    - host: myprometheus.com
      http:
        paths:
          - backend:
              service:
                name: prometheus-k8s
                port:
                  number: 9090
            path: /
            pathType: Prefix
    - host: mygrafana.com
      http:
        paths:
          - backend:
              service:
                name: grafana
                port:
                  number: 3000
            path: /
            pathType: Prefix
    - host: myalertmanager.com
      http:
        paths:
          - backend:
              service:
                name: alertmanager-main
                port:
                  number: 9093
            path: /
            pathType: Prefix
---
# test
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  name: test-ingress
  namespace: test
spec:
  ingressClassName: nginx
  rules:
    - host: mytest.com
      http:
        paths:
          - backend:
              service:
                name: kubernetes-client-doc-web
                port:
                  number: 80
            path: /
            pathType: Prefix
---
# elk
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - admin"
  name: elk-ingress
  namespace: elk
spec:
  ingressClassName: nginx
  rules:
    - host: myelasticsearch.com
      http:
        paths:
          - backend:
              service:
                name: elasticsearch
                port:
                  number: 9200
            path: /
            pathType: Prefix
    - host: mykibana.com
      http:
        paths:
          - backend:
              service:
                name: kibana
                port:
                  number: 5601
            path: /
            pathType: Prefix
---
# mod-5gucp
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - admin"
  name: dahantc-exporter-ingress
  namespace: mod-5gucp
spec:
  ingressClassName: nginx
  rules:
    - host: mydahantc-exporter.com
      http:
        paths:
          - backend:
              service:
                name: dahantc-exporter-mod-5gucp-outcluster
                port:
                  number: 31888
            path: /
            pathType: Prefix
---
# ansible
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - admin"
  name: ansible
  namespace: ansible
spec:
  ingressClassName: nginx
  rules:
    - host: myansible.com
      http:
        paths:
          - backend:
              service:
                name: ansible
                port:
                  number: 3000
            path: /
            pathType: Prefix
